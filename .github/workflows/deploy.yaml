name: Deploy Load Balancer with Docker and HTML Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Descargar el código del repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Loguearse en Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    # 3. Construir y subir la imagen Docker con Nginx y los archivos HTML y CSS
    - name: Build and Push Docker image
      run: |
        # Construir la imagen Docker utilizando el Dockerfile existente
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mybalance:latest .

        # Subir la imagen Docker a Docker Hub
        docker push ${{ secrets.DOCKER_USERNAME }}/mybalance:latest

    # 4. Conectarse a la instancia EC2 y desplegar el contenedor Docker
    - name: SSH into EC2 and deploy Docker container
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.EC2_SERVER }}
        username: ubuntu
        key: ${{ secrets.SERVER_KEY }}
        script: |
          # Instalar Docker en la instancia EC2
          sudo apt update && sudo apt install -y docker.io

          # Hacer que Docker se inicie automáticamente
          sudo systemctl enable --now docker

          # Descargar la última imagen desde Docker Hub
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/mybalance:latest

          # Detener cualquier contenedor en ejecución
          sudo docker ps -q | xargs sudo docker stop || true
          sudo docker ps -q | xargs sudo docker rm || true

          # Iniciar el nuevo contenedor con la imagen descargada
          sudo docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/mybalance:latest

          # Verificar el contenedor en ejecución
          sudo docker ps
